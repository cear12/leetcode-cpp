#include <vector>
using namespace std;

// Эффективное in-place решение, использующее первую строку и столбец в качестве маркеров
void setZeroes(vector<vector<int>>& matrix) {
    int m = matrix.size();      // Количество строк
    int n = matrix[0].size();   // Количество столбцов
    bool col0 = false;          // Нужно ли обнулять первый столбец

    // Первый проход: отмечаем строки и столбцы, которые нужно обнулить
    for (int i = 0; i < m; ++i) {
        if (matrix[i][0] == 0) col0 = true;   // Есть ли ноль в первом столбце
        for (int j = 1; j < n; ++j)
            if (matrix[i][j] == 0) {
                matrix[i][0] = 0; // Отметить строку для обнуления
                matrix[0][j] = 0; // Отметить столбец для обнуления
            }
    }
    // Второй проход: идём в обратном порядке, обнуляем по маркерам
    for (int i = m - 1; i >= 0; --i) {
        for (int j = n - 1; j >= 1; --j)
            if (matrix[i][0] == 0 || matrix[0][j] == 0)
                matrix[i][j] = 0;
        if (col0) matrix[i][0] = 0;
    }
}
/*
Временная сложность: O(m*n)
Пространственная сложность: O(1)
*/
